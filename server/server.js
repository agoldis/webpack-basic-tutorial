var express = require('express');
var path = require('path');
var webpack = require('webpack'); // load compiler - it will actually generate content
var webpackConfig = require('../webpack.config.js'); // load config for webpack init
var webpackDevMiddleware = require('webpack-dev-middleware'); // load webpack-dev-middleware, it will serve generated by webpack contents
var webpackHotMiddleware = require('webpack-hot-middleware'); // load webpack-hot-middleware, it will notify the client when refresh is needed

var port = 3000;
var app = express();

app.use(express.static(__dirname + '/../app')); // true static content


var webpackCompiler = webpack(webpackConfig); // init webpack with the config
/*
  The middleware will catch requests to path configured by `publicPath`
  when a request to `publicPath` arrives, the content generated by webpack
  is server from memory.
  Here i use the same path as in the original webpack config
*/
app.use(webpackDevMiddleware(webpackCompiler, {
  publicPath: webpackConfig.output.publicPath
}));

app.use(webpackHotMiddleware(webpackCompiler)) // add hot module loader


app.listen(port, 'localhost', function onStart(err) {
  if (err) {
    console.log(err);
  }
  console.info('==> ðŸŒŽ  Listening on port %s. Open up http://localhost:%s/ in your browser.', port, port);
});
